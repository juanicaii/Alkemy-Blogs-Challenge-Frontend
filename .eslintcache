[{"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/Layout/index.js":"1","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/AdminPanelView/index.js":"2","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/DetailsPostView/DetailsPostView.js":"3","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/NotFoundView/NotFoundView.js":"4","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/Title/index.js":"5","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/FormPost/index.js":"6","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/Title/Title.js":"7","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/FormPost/FormPost.js":"8","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/hooks/useCurrentPage.js":"9","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/App.js":"10","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/Layout/Layout.js":"11","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/HomeView/index.js":"12","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/HomeView/HomeView.js":"13","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/hooks/useHttp.js":"14","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/Post/Post.js":"15","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/DetailsPostView/index.js":"16","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/Post/index.js":"17","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/Icons/Icons.js":"18","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/AdminPanelView/AdminPanelView.js":"19","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/Icons/index.js":"20","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/utils/status.js":"21","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/index.js":"22","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/react.config.js":"23","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/NotFoundView/index.js":"24","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/NewPostView/NewPostView.js":"25","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/NewPostView/index.js":"26"},{"size":55,"mtime":1608237320360,"results":"27","hashOfConfig":"28"},{"size":79,"mtime":1608322575280,"results":"29","hashOfConfig":"28"},{"size":1116,"mtime":1608587927120,"results":"30","hashOfConfig":"28"},{"size":349,"mtime":1608583998610,"results":"31","hashOfConfig":"28"},{"size":52,"mtime":1608239477770,"results":"32","hashOfConfig":"28"},{"size":61,"mtime":1608323274740,"results":"33","hashOfConfig":"28"},{"size":119,"mtime":1608240028370,"results":"34","hashOfConfig":"28"},{"size":2039,"mtime":1608589426840,"results":"35","hashOfConfig":"28"},{"size":782,"mtime":1608592899140,"results":"36","hashOfConfig":"28"},{"size":1467,"mtime":1608591426190,"results":"37","hashOfConfig":"28"},{"size":2815,"mtime":1608592959870,"results":"38","hashOfConfig":"28"},{"size":61,"mtime":1608239581530,"results":"39","hashOfConfig":"28"},{"size":1481,"mtime":1608588702350,"results":"40","hashOfConfig":"28"},{"size":637,"mtime":1608589010440,"results":"41","hashOfConfig":"28"},{"size":726,"mtime":1608588696860,"results":"42","hashOfConfig":"28"},{"size":82,"mtime":1608239765290,"results":"43","hashOfConfig":"28"},{"size":49,"mtime":1608241370510,"results":"44","hashOfConfig":"28"},{"size":449,"mtime":1608332559590,"results":"45","hashOfConfig":"28"},{"size":2728,"mtime":1608590593130,"results":"46","hashOfConfig":"28"},{"size":52,"mtime":1608331886020,"results":"47","hashOfConfig":"28"},{"size":108,"mtime":1608583788110,"results":"48","hashOfConfig":"28"},{"size":226,"mtime":1608325653090,"results":"49","hashOfConfig":"28"},{"size":76,"mtime":1608587365110,"results":"50","hashOfConfig":"28"},{"size":73,"mtime":1608239656320,"results":"51","hashOfConfig":"28"},{"size":1818,"mtime":1608591639770,"results":"52","hashOfConfig":"28"},{"size":70,"mtime":1608591307710,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"189xs54",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/Layout/index.js",[],["115","116"],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/AdminPanelView/index.js",[],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/DetailsPostView/DetailsPostView.js",[],["117","118"],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/NotFoundView/NotFoundView.js",[],["119","120"],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/Title/index.js",[],["121","122"],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/FormPost/index.js",[],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/Title/Title.js",[],["123","124"],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/FormPost/FormPost.js",["125"],"import { Modal, Button, Form, Input } from \"antd\";\nimport config from \"../../react.config\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport history from \"../../history\";\nexport default function FormPost({ open, setOpen, item }) {\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const MySwal = withReactContent(Swal);\n\n  const layout = {\n    labelCol: { span: 5 },\n    wrapperCol: { span: 16 },\n  };\n\n  const validateMessages = {\n    required: \"${label} is required!\",\n  };\n\n  const onFinish = async (values) => {\n    console.log(item);\n    const post = {\n      id: values.id,\n      title: values.title,\n      body: values.content,\n      image: item.image,\n      category: item.category,\n      userId: 1,\n    };\n    const editedItem = await axios.patch(\n      `${config.api_url}/posts/${item.id}`,\n      post\n    );\n\n    if (editedItem) {\n      MySwal.fire(\"Good job!\", \"Edited Succesfuly!\", \"success\");\n      history.go(0);\n      setOpen(false);\n    }\n  };\n  return (\n    <>\n      <Modal\n        title=\"Basic Modal\"\n        visible={open}\n        onCancel={handleCancel}\n        okButtonProps={{ style: { display: \"none\" } }}\n      >\n        <Form\n          {...layout}\n          name=\"nest-messages\"\n          onFinish={onFinish}\n          validateMessages={validateMessages}\n          initialValues={{ title: item.title, content: item.body }}\n        >\n          <Form.Item\n            name=\"title\"\n            label=\"Post Title\"\n            rules={[{ required: true }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            rules={[{ required: true }]}\n            name=\"content\"\n            label=\"Content\"\n          >\n            <Input.TextArea />\n          </Form.Item>\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 10 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/hooks/useCurrentPage.js",["126"],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/App.js",[],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/Layout/Layout.js",[],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/HomeView/index.js",[],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/HomeView/HomeView.js",[],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/hooks/useHttp.js",["127"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport status from \"../utils/status\";\nimport config from \"../react.config\";\nexport default function useHttp(url, method) {\n  const [data, setData] = useState([]);\n  const route = config.api === \"express\";\n\n  const fetchData = async () => {\n    const posts = await axios({\n      method: method,\n      url: url,\n    });\n\n    if (posts.status === status.Ok) {\n      setData(route ? posts.data.content : posts.data);\n      console.log(posts.data.content);\n    } else {\n      setData(null);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [url]);\n\n  return data;\n}\n","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/Post/Post.js",[],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/DetailsPostView/index.js",[],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/Post/index.js",[],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/Icons/Icons.js",[],["128","129"],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/AdminPanelView/AdminPanelView.js",["130","131","132"],"import { Table, Modal, Space } from \"antd\";\nimport config from \"../../react.config\";\nimport useHttp from \"../../hooks/useHttp\";\nimport Title from \"../../components/Title\";\nimport FormPost from \"../../components/FormPost\";\nimport axios from \"axios\";\nimport {\n  EditOutlined,\n  LoadingOutlined,\n  DeleteOutlined,\n} from \"@ant-design/icons\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { useState } from \"react\";\nimport history from \"../../history\";\nconst MySwal = withReactContent(Swal);\n\nexport default function AdminPanel() {\n  const [edited, setEdited] = useState(false);\n  const [seletedItem, setSelectedItem] = useState(null);\n  const posts = useHttp(`${config.api_url}/posts`, \"get\");\n\n  const deletePost = async ({ id }) => {\n    const result = await MySwal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    });\n    if (result.isConfirmed) {\n      const deletedItem = await axios.delete(`${config.api_url}/posts/${id}`);\n      if (deletedItem) {\n        Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n        history.go(0);\n      }\n    }\n  };\n\n  const editPost = async ({ id, title, body, image, category }) => {\n    setSelectedItem({ id, title, body, image, category: category.name });\n    setEdited(true);\n  };\n\n  const columns = [\n    {\n      title: \"#\",\n      dataIndex: \"id\",\n      key: \"id\",\n    },\n    {\n      title: \"Post Title\",\n      dataIndex: \"title\",\n      key: \"title\",\n    },\n    {\n      title: \"CreatedAt\",\n      dataIndex: \"createdAt\",\n      key: \"createdAt\",\n      render: (text) => \"20/12/2020\",\n    },\n\n    {\n      title: \"Action\",\n      key: \"action\",\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <a\n            onClick={() => {\n              editPost(record);\n            }}\n          >\n            <EditOutlined />\n          </a>\n          <a>\n            <DeleteOutlined\n              onClick={() => {\n                deletePost(record);\n              }}\n            />\n          </a>\n        </Space>\n      ),\n    },\n  ];\n\n  const data = posts;\n\n  return (\n    <>\n      <Title>Post Manager</Title>\n\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        {posts.length ? (\n          <Table rowKey=\"id\" columns={columns} dataSource={data} />\n        ) : (\n          <LoadingOutlined style={{ fontSize: 50 }} />\n        )}\n      </div>\n      {edited ? (\n        <FormPost open={edited} setOpen={setEdited} item={seletedItem} />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n","/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/components/Icons/index.js",[],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/utils/status.js",[],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/index.js",[],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/react.config.js",[],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/NotFoundView/index.js",[],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/NewPostView/NewPostView.js",["133"],"/home/juani/proyectos/Alkemy/Challenge Blog/frontend/src/views/NewPostView/index.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"134","replacedBy":"138"},{"ruleId":"136","replacedBy":"139"},{"ruleId":"134","replacedBy":"140"},{"ruleId":"136","replacedBy":"141"},{"ruleId":"134","replacedBy":"142"},{"ruleId":"136","replacedBy":"143"},{"ruleId":"134","replacedBy":"144"},{"ruleId":"136","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":20,"column":15,"nodeType":"148","messageId":"149","endLine":20,"endColumn":38},{"ruleId":"150","severity":1,"message":"151","line":13,"column":6,"nodeType":"152","endLine":13,"endColumn":8,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"154","line":24,"column":6,"nodeType":"152","endLine":24,"endColumn":11,"suggestions":"155"},{"ruleId":"134","replacedBy":"156"},{"ruleId":"136","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":70,"column":11,"nodeType":"164","endLine":74,"endColumn":12},{"ruleId":"162","severity":1,"message":"163","line":77,"column":11,"nodeType":"164","endLine":77,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":17,"column":15,"nodeType":"148","messageId":"149","endLine":17,"endColumn":38},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],["165"],["166"],["165"],["166"],["165"],["166"],["165"],["166"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["167"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["168"],["165"],["166"],"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [url]",{"range":"173","text":"174"},"Update the dependencies array to be: [fetchData, url]",{"range":"175","text":"176"},[388,390],"[url]",[611,616],"[fetchData, url]"]